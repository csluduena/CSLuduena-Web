

===== C:\Users\SebaHero\Desktop\CSLuduena\eslint.config.js =====

import js from '@eslint/js'
import globals from 'globals'
import react from 'eslint-plugin-react'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'

export default [
    { ignores: ['dist'] },
    {
        files: ['**/*.{js,jsx}'],
        languageOptions: {
            ecmaVersion: 2020,
            globals: globals.browser,
            parserOptions: {
                ecmaVersion: 'latest',
                ecmaFeatures: { jsx: true },
                sourceType: 'module',
            },
        },
        settings: { react: { version: '18.3' } },
        plugins: {
            react,
            'react-hooks': reactHooks,
            'react-refresh': reactRefresh,
        },
        rules: {
            ...js.configs.recommended.rules,
            ...react.configs.recommended.rules,
            ...react.configs['jsx-runtime'].rules,
            ...reactHooks.configs.recommended.rules,
            'react/jsx-no-target-blank': 'off',
            "no-unused-vars": ["warn", { "varsIgnorePattern": "^t$" }],
            'react-refresh/only-export-components': [
                'warn',
                { allowConstantExport: true },
            ],
            'react/prop-types': 'off'  // Desactiva la validación de prop-types
        },
    },
]


===== C:\Users\SebaHero\Desktop\CSLuduena\index.html =====

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CSLuduena</title>
    <link rel="stylesheet" href="/src/index.css">
</head>
<body class="bg-dark-100 text-white">
    <nav id="navbar" class="bg-dark-200 fixed w-full z-50"></nav>
    
    <main id="main-content"></main>
    
    <footer id="footer" class="bg-dark-200 py-6"></footer>

    <script type="module" src="/src/main.js"></script>
</body>
</html>

===== C:\Users\SebaHero\Desktop\CSLuduena\package.json =====

{
  "name": "csluduena-portfolio-vanilla",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "devDependencies": {
    "autoprefixer": "^10.4.18",
    "postcss": "^8.4.35",
    "tailwindcss": "^3.4.1",
    "vite": "^5.0.0"
  },
  "dependencies": {
    "i18next": "^23.10.1"
  }
}

===== C:\Users\SebaHero\Desktop\CSLuduena\postcss.config.js =====

export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

===== C:\Users\SebaHero\Desktop\CSLuduena\README.md =====

# React + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

```
CSLuduena-Portfolio
├─ .git
│  ├─ COMMIT_EDITMSG
│  ├─ config
│  ├─ description
│  ├─ FETCH_HEAD
│  ├─ HEAD
│  ├─ hooks
│  │  ├─ applypatch-msg.sample
│  │  ├─ commit-msg.sample
│  │  ├─ fsmonitor-watchman.sample
│  │  ├─ post-update.sample
│  │  ├─ pre-applypatch.sample
│  │  ├─ pre-commit.sample
│  │  ├─ pre-merge-commit.sample
│  │  ├─ pre-push.sample
│  │  ├─ pre-rebase.sample
│  │  ├─ pre-receive.sample
│  │  ├─ prepare-commit-msg.sample
│  │  ├─ push-to-checkout.sample
│  │  ├─ sendemail-validate.sample
│  │  └─ update.sample
│  └─ index
├─ .gitignore
├─ eslint.config.js
├─ index.html
├─ package-lock.json
├─ package.json
├─ postcss.config.js
├─ public
│  ├─ cv-en.pdf
│  ├─ cv-es.pdf
│  ├─ projects
│  │  ├─ codercamp.png
│  │  ├─ guitarstore.png
│  │  ├─ hbmodels.png
│  │  ├─ hbmodelsAdmin.png
│  │  ├─ hbmodelsAdminAlumnos.png
│  │  ├─ hbmodelsAlumnosComprobantes.png
│  │  ├─ javascript.png
│  │  └─ viajesbsas.png
│  └─ vite.svg
├─ README.md
├─ src
│  ├─ App.css
│  ├─ App.jsx
│  ├─ assets
│  │  ├─ coding.mp4
│  │  ├─ profile.jpg
│  │  ├─ react.svg
│  │  ├─ teamwork.mp4
│  │  └─ teamwork2.mp4
│  ├─ components
│  │  ├─ Footer.jsx
│  │  └─ Navbar.jsx
│  ├─ i18n
│  │  ├─ config.js
│  │  └─ locales
│  │     ├─ en.json
│  │     └─ es.json
│  ├─ index.css
│  ├─ main.jsx
│  ├─ pages
│  │  ├─ About
│  │  │  ├─ components
│  │  │  │  └─ Timeline.jsx
│  │  │  └─ index.jsx
│  │  ├─ Contact
│  │  │  ├─ components
│  │  │  │  └─ ContactForm.jsx
│  │  │  └─ index.jsx
│  │  ├─ Home
│  │  │  ├─ components
│  │  │  │  ├─ Hero.jsx
│  │  │  │  ├─ SkillCard.jsx
│  │  │  │  ├─ Skills.jsx
│  │  │  │  └─ TechBadge.jsx
│  │  │  └─ index.jsx
│  │  └─ Portfolio
│  │     ├─ components
│  │     │  └─ ProjectCard.jsx
│  │     └─ index.jsx
│  └─ Routes.jsx
├─ tailwind.config.js
└─ vite.config.js

```

===== C:\Users\SebaHero\Desktop\CSLuduena\src\App.css =====

#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}


===== C:\Users\SebaHero\Desktop\CSLuduena\src\components\Footer.js =====

import { t } from '../i18n/config.js';

export function setupFooter() {
    const footer = document.getElementById('footer');
    
    footer.innerHTML = `
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0">
                <div class="text-gray-400">
                    <span class="font-bold">CSLuduena®</span>
                </div>
                
                <div class="flex items-center space-x-6">
                    <a href="https://www.linkedin.com/in/csluduena" target="_blank" rel="noopener noreferrer" 
                       class="text-gray-400 hover:text-primary-400 transition-colors">
                        <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                        </svg>
                    </a>
                    <a href="https://github.com/csluduena" target="_blank" rel="noopener noreferrer"
                       class="text-gray-400 hover:text-primary-400 transition-colors">
                        <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z"/>
                        </svg>
                    </a>
                    <a href="https://www.csluduena.com" target="_blank" rel="noopener noreferrer"
                       class="text-gray-400 hover:text-primary-400 transition-colors">
                        <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                  d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"/>
                        </svg>
                    </a>
                    <a href="mailto:contact@csluduena.com"
                       class="text-gray-400 hover:text-primary-400 transition-colors">
                        <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                  d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                        </svg>
                    </a>
                </div>

                <div class="text-gray-400">
                    ${t('footer.rights')}
                </div>
            </div>
        </div>
    `;
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\components\Navbar.js =====

import { t, changeLanguage } from '../i18n/config.js';
import i18next from 'i18next';

export function setupNavbar() {
    const navbar = document.getElementById('navbar');
    
    function renderNavbar() {
        navbar.innerHTML = `
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex items-center justify-between h-16">
                    <div class="flex-shrink-0">
                        <a href="/" data-link class="text-primary-500 text-xl font-bold hover:text-primary-400 transition-colors">CSLuduena</a>
                    </div>

                    <div class="hidden md:block">
                        <div class="ml-10 flex items-baseline space-x-4">
                            <a href="/" data-link class="text-gray-300 hover:text-primary-400 px-3 py-2 transition-colors">${t('nav.home')}</a>
                            <a href="/about" data-link class="text-gray-300 hover:text-primary-400 px-3 py-2 transition-colors">${t('nav.about')}</a>
                            <a href="/portfolio" data-link class="text-gray-300 hover:text-primary-400 px-3 py-2 transition-colors">${t('nav.portfolio')}</a>
                            <a href="/contact" data-link class="text-gray-300 hover:text-primary-400 px-3 py-2 transition-colors">${t('nav.contact')}</a>
                            <button id="langToggle" class="text-gray-300 hover:text-primary-400 px-3 py-2 transition-colors">
                                ${i18next.language === 'en' ? 'ES' : 'EN'}
                            </button>
                        </div>
                    </div>

                    <div class="md:hidden">
                        <button id="mobileMenuBtn" class="text-gray-300 hover:text-white">
                            <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>

            <div id="mobileMenu" class="hidden md:hidden bg-dark-300">
                <div class="px-2 pt-2 pb-3 space-y-1">
                    <a href="/" data-link class="text-gray-300 hover:text-primary-400 block px-3 py-2 transition-colors">${t('nav.home')}</a>
                    <a href="/about" data-link class="text-gray-300 hover:text-primary-400 block px-3 py-2 transition-colors">${t('nav.about')}</a>
                    <a href="/portfolio" data-link class="text-gray-300 hover:text-primary-400 block px-3 py-2 transition-colors">${t('nav.portfolio')}</a>
                    <a href="/contact" data-link class="text-gray-300 hover:text-primary-400 block px-3 py-2 transition-colors">${t('nav.contact')}</a>
                    <button id="mobileLangToggle" class="text-gray-300 hover:text-primary-400 block px-3 py-2 w-full text-left transition-colors">
                        ${i18next.language === 'en' ? 'ES' : 'EN'}
                    </button>
                </div>
            </div>
        `;

        // Event Listeners
        const mobileMenuBtn = document.getElementById('mobileMenuBtn');
        const mobileMenu = document.getElementById('mobileMenu');
        const langToggle = document.getElementById('langToggle');
        const mobileLangToggle = document.getElementById('mobileLangToggle');

        mobileMenuBtn?.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
        });

        const handleLanguageChange = () => {
            const newLang = i18next.language === 'en' ? 'es' : 'en';
            changeLanguage(newLang).then(() => {
                renderNavbar();
                // Re-render the current page
                const event = new CustomEvent('languageChanged', { detail: { language: newLang } });
                document.dispatchEvent(event);
            });
        };

        langToggle?.addEventListener('click', handleLanguageChange);
        mobileLangToggle?.addEventListener('click', handleLanguageChange);
    }

    renderNavbar();

    // Listen for language changes
    document.addEventListener('languageChanged', () => {
        renderNavbar();
    });
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\i18n\config.js =====

import i18next from 'i18next';

export async function setupI18n() {
    const enTranslations = await import('./locales/en.json');
    const esTranslations = await import('./locales/es.json');

    await i18next.init({
        resources: {
            en: {
                translation: enTranslations.default
            },
            es: {
                translation: esTranslations.default
            }
        },
        lng: 'en',
        fallbackLng: 'en',
        interpolation: {
            escapeValue: false
        }
    });

    return i18next;
}

export function t(key) {
    return i18next.t(key);
}

export function changeLanguage(lng) {
    return i18next.changeLanguage(lng);
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\i18n\locales\en.json =====

{
    "nav": {
        "home": "Home",
        "about": "About me / Experience",
        "portfolio": "Portfolio",
        "contact": "Contact me",
        "downloadCV": "Download CV",
        "language": "Language"
    },
    "hero": {
        "role": "Fullstack Developer",
        "technologies": "JavaScript | Odoo | Salesforce"
    },
    "skills": {
        "frontend": {
            "title": "Frontend",
            "description": "Crafting engaging and functional user interfaces with the latest web technologies.",
            "technologies": [
                "HTML",
                "CSS",
                "JavaScript",
                "ReactJS",
                "Bootstrap",
                "Tailwind",
                "Odoo",
                "Salesforce"
            ]
        },
        "backend": {
            "title": "Backend",
            "description": "Building robust and scalable foundation of web applications, ensuring seamless functionality and efficient data management.",
            "technologies": [
                "Node.js",
                "SQL",
                "MongoDB",
                "Firebase",
                "Postman",
                "Odoo",
                "Salesforce"
            ]
        },
        "adaptable": {
            "title": "Adaptable & Efficient",
            "description": "A proactive and resourceful individual who excels in independent environments, consistently delivering high-quality work with a keen eye for detail."
        },
        "supportive": {
            "title": "Supportive & Inclusive",
            "description": "A friendly and effective collaborator who thrives in any team environment, driving projects forward with seamless communication and a results-oriented approach."
        },
        "experience": {
            "title": "Experience & Responsibility",
            "description": "Experience, quality, commitment, and responsibility. That's what you'll find in me, in addition to being a friendly person who easily adapts to work environments in a friendly and efficient manner."
        }
    },
    "about": {
        "intro": "Hi, I am Carlos Sebastian Ludueña",
        "experience": {
            "indie": {
                "title": "Full Stack Developer",
                "company": "INDIE Argentina",
                "period": "Jan 2023 - Present",
                "description": "I currently work as a Full Stack Developer at INDIE Argentina, where I specialize in the development and maintenance of custom websites using Odoo ERP. My role focuses on creating comprehensive solutions that encompass both frontend and backend, implementing complex functionalities, designing attractive interfaces and optimizing performance with the most appropriate technologies. I contribute to the success of web projects that generate a positive impact on clients."
            },
            "freelance": {
                "title": "Web Development",
                "company": "Freelance",
                "period": "Dec 2011 - Present",
                "description": "I continue my work as a freelance web developer, a path I started with pure HTML and CSS and that has led me to master technologies such as React, JavaScript, Node.js and MariaDB. In addition, I have gained experience in testing with Postman, using Firebase and creating responsive designs. I have learned to communicate effectively with clients and offer customized solutions."
            },
            "st-computacion": {
                "title": "Community Manager",
                "company": "ST Computacion",
                "period": "Aug 2011 - Dec 2022",
                "description": "My experience as a Community Manager has given me a deep understanding of the digital ecosystem and online marketing strategies. I have developed communication skills, social media management and data analysis. I have also learned to work in a team, coordinate projects and manage online reputation crises."
            },
            "ep-soluciones": {
                "title": "Virtual Assistant",
                "company": "EP Soluciones",
                "period": "Jan 2007 - July 2011",
                "description": "In my role as a Virtual Assistant, I developed organizational, time management and attention to detail skills. I learned to optimize administrative processes, manage communication with clients and work autonomously and proactively. This experience has provided me with a solid foundation to work in professional environments."
            }
        }
    },
    "portfolio": {
        "title": "Featured Projects",
        "title2": "Trusted Clients",
        "subtitle": "All my Projects",
        "subtitle2": "Empowering Businesses with Confidence",
        "projects": {
            "codercamp": {
                "description": "Educational platform project focused on interactive learning experiences"
            },
            "viajesbsas": {
                "description": "Travel agency website with comprehensive booking features"
            },
            "guitarstore": {
                "description": "Modern e-commerce platform for musical instruments"
            },
            "javascript": {
                "description": "Interactive web application showcasing JavaScript capabilities"
            },
            "hbm": {
                "description": "Modeling agency management system with comprehensive features for user registration, payment processing, and administrative controls.",
                "platforms": [
                    "User Registration & Login",
                    "Monthly Payment Upload System",
                    "Admin Payment Management",
                    "Automated Payment Reminders",
                    "Password Recovery",
                    "Real-Time Profile Updates",
                    "Admin Filtering & Custom Views",
                    "Hostinger",
                    "Vercel"
                ]
            }
        }
    },
    "contact": {
        "title": "Interested in working together?",
        "subtitle": "Get in touch to discuss your needs and explore the possibilities.",
        "form": {
            "name": "Name",
            "email": "Email",
            "message": "Message",
            "send": "Send Message"
        }
    },
    "footer": {
        "rights": "© 2024. All rights reserved."
    }
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\i18n\locales\es.json =====

{
    "nav": {
        "home": "Inicio",
        "about": "Sobre mí / Experiencia",
        "portfolio": "Portafolio",
        "contact": "Contáctame",
        "downloadCV": "Descargar CV",
        "language": "Idioma"
    },
    "hero": {
        "role": "Desarrollador Full Stack",
        "technologies": "JavaScript | Odoo | Salesforce"
    },
    "skills": {
        "frontend": {
            "title": "Frontend",
            "description": "Creación de interfaces de usuario atractivas y funcionales con las últimas tecnologías web.",
            "technologies": [
                "HTML",
                "CSS",
                "JavaScript",
                "ReactJS",
                "Bootstrap",
                "Tailwind",
                "Odoo",
                "Salesforce"
            ]
        },
        "backend": {
            "title": "Backend",
            "description": "Construcción de bases sólidas y escalables para aplicaciones web, asegurando una funcionalidad perfecta y una gestión eficiente de datos.",
            "technologies": [
                "Node.js",
                "SQL",
                "MongoDB",
                "Firebase",
                "Postman",
                "Odoo",
                "Salesforce"
            ]
        },
        "adaptable": {
            "title": "Adaptable y Eficiente",
            "description": "Soy una persona proactiva y recursiva que sobresale en entornos independientes, entregando constantemente trabajo de alta calidad con atención al detalle."
        },
        "supportive": {
            "title": "Colaborador e Inclusivo",
            "description": "Un colaborador amigable y efectivo que prospera en cualquier entorno de equipo, impulsando proyectos con comunicación fluida y un enfoque orientado a resultados."
        },
        "experience": {
            "title": "Experiencia y Responsabilidad",
            "description": "Experiencia, calidad, compromiso y responsabilidad. Eso es lo que encontrarás en mí, además de ser una persona amigable que se adapta fácilmente a los entornos de trabajo de manera cordial y eficiente."
        }
    },
    "about": {
        "intro": "Hola, soy Carlos Sebastian Ludueña",
        "experience": {
            "indie": {
                "title": "Desarrollador Full Stack",
                "company": "INDIE Argentina",
                "period": "Enero 2023 - Presente",
                "description": "Actualmente me desempeño como Full Stack Developer en INDIE Argentina, donde me especializo en el desarrollo y mantenimiento de sitios web a medida utilizando Odoo ERP. Mi rol se centra en la creación de soluciones integrales que abarcan frontend y backend, implementando funcionalidades complejas, diseñando interfaces atractivas y optimizando el rendimiento con las tecnologías más adecuadas. Contribuyo al éxito de proyectos web que generan un impacto positivo en los clientes."
            },
            "freelance": {
                "title": "Desarrollo Web",
                "company": "Freelance",
                "period": "Diciembre 2011 - Presente",
                "description": "Continúo mi labor como Desarrollador Web freelance, un camino que inicié con HTML y CSS puro y que me ha llevado a dominar tecnologías como React, JavaScript, Node.js y MariaDB. Además, he adquirido experiencia en testeos con Postman, el uso de Firebase y la creación de diseños responsive. He aprendido a comunicarme eficazmente con los clientes y a ofrecer soluciones a medida."
            },
            "st-computacion": {
                "title": "Community Manager",
                "company": "ST Computacion",
                "period": "Agosto 2011 - Diciembre 2022",
                "description": "Mi experiencia como Community Manager me ha brindado un profundo conocimiento del ecosistema digital y las estrategias de marketing online. Desarrollé habilidades de comunicación, gestión de redes sociales y análisis de datos. Además, he aprendido a trabajar en equipo, a coordinar proyectos y a gestionar crisis de reputación online."
            },
            "ep-soluciones": {
                "title": "Asistente Virtual",
                "company": "EP Soluciones",
                "period": "Enero 2007 - Julio 2011",
                "description": "En mi rol como Asistente Virtual, desarrollé habilidades de organización, gestión del tiempo y atención al detalle. Aprendí a optimizar procesos administrativos, a gestionar la comunicación con clientes y a trabajar de forma autónoma y proactiva. Esta experiencia me ha proporcionado una base sólida para desenvolverme en entornos profesionales."
            }
        }
    },
    "portfolio": {
        "title": "Proyectos Destacados",
        "title2": "Clientes de Confianza",
        "subtitle": "Todos mis Proyectos",
        "subtitle2": "Potenciando Negocios con Confianza",
        "projects": {
            "codercamp": {
                "description": "Plataforma educativa enfocada en experiencias de aprendizaje interactivo"
            },
            "viajesbsas": {
                "description": "Sitio web de agencia de viajes con funciones completas de reserva"
            },
            "guitarstore": {
                "description": "Plataforma moderna de comercio electrónico para instrumentos musicales"
            },
            "javascript": {
                "description": "Aplicación web interactiva que muestra las capacidades de JavaScript"
            },
            "hbm": {
                "description": "Sistema de gestión de agencia de modelos con características completas para registro de usuarios, procesamiento de pagos y controles administrativos.",
                "platforms": [
                    "Registro y Login de Usuarios",
                    "Sistema de Carga de Pagos Mensuales",
                    "Gestión de Pagos Administrativa",
                    "Recordatorios Automáticos de Pago",
                    "Recuperación de Contraseña",
                    "Actualizaciones de Perfil en Tiempo Real",
                    "Filtrado Administrativo y Vistas Personalizadas",
                    "Hostinger",
                    "Vercel"
                ]
            }
        }
    },
    "contact": {
        "title": "¿Interesado en trabajar juntos?",
        "subtitle": "Contáctame para discutir tus necesidades y explorar las posibilidades.",
        "form": {
            "name": "Nombre",
            "email": "Correo electrónico",
            "message": "Mensaje",
            "send": "Enviar mensaje"
        }
    },
    "footer": {
        "rights": "© 2024. Todos los derechos reservados."
    }
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\index.css =====

@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';

:root {
  color-scheme: dark;
}

/* Circuit Animation */
.circuit-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 0;
}

.circuit-line {
  position: absolute;
  background: linear-gradient(90deg, rgba(56, 189, 248, 0), rgba(56, 189, 248, 0.2), rgba(56, 189, 248, 0));
  height: 1px;
  width: 100px;
  opacity: 0;
  transform-origin: left center;
  transition: all 0.5s ease;
}

.circuit-dot {
  position: absolute;
  width: 4px;
  height: 4px;
  background: rgba(56, 189, 248, 0.4);
  border-radius: 50%;
  opacity: 0;
  filter: blur(1px);
}

body {
  @apply bg-dark-100 text-white;
  margin: 0;
  font-family: 'Inter', system-ui, -apple-system, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-image: 
    linear-gradient(to bottom right, rgba(56, 189, 248, 0.05) 1px, transparent 1px),
    linear-gradient(to bottom right, rgba(56, 189, 248, 0.05) 1px, transparent 1px);
  background-size: 30px 30px;
  background-position: 0 0, 15px 15px;
  overflow-x: hidden;
}

#main-content {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  position: relative;
  z-index: 1;
}

#main-content::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(90deg, transparent, rgba(56, 189, 248, 0.3), transparent);
  z-index: 1000;
}

.nav-glow {
  position: relative;
}

.nav-glow::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, transparent, var(--primary-color, #38bdf8), transparent);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.nav-glow:hover::after {
  opacity: 1;
}

.card-glow {
  position: relative;
  overflow: hidden;
}

.card-glow::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, transparent, rgba(56, 189, 248, 0.6), transparent);
  transition: left 0.5s ease;
}

.card-glow:hover::before {
  left: 100%;
}

/* Glowing cursor trail */
.cursor-glow {
  width: 20px;
  height: 20px;
  background: radial-gradient(circle, rgba(56, 189, 248, 0.15) 0%, transparent 70%);
  position: fixed;
  pointer-events: none;
  z-index: 9999;
  transition: transform 0.1s ease;
  backdrop-filter: blur(2px);
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\main.js =====

import './index.css';
import { initRouter } from './router.js';
import { setupNavbar } from './components/Navbar.js';
import { setupFooter } from './components/Footer.js';
import { setupI18n } from './i18n/config.js';

// Initialize circuit animation
function initCircuitAnimation() {
    const container = document.createElement('div');
    container.className = 'circuit-container';
    document.body.appendChild(container);

    // Create cursor glow
    const cursorGlow = document.createElement('div');
    cursorGlow.className = 'cursor-glow';
    document.body.appendChild(cursorGlow);

    // Track mouse movement
    document.addEventListener('mousemove', (e) => {
        // Update cursor glow
        cursorGlow.style.transform = `translate(${e.clientX - 10}px, ${e.clientY - 10}px)`;

        // Create circuit effect occasionally
        if (Math.random() < 0.1) {
            const line = document.createElement('div');
            line.className = 'circuit-line';
            
            // Random position near cursor
            const x = e.clientX + (Math.random() - 0.5) * 100;
            const y = e.clientY + (Math.random() - 0.5) * 100;
            
            line.style.left = `${x}px`;
            line.style.top = `${y}px`;
            line.style.transform = `rotate(${Math.random() * 360}deg)`;
            
            container.appendChild(line);

            // Animate
            requestAnimationFrame(() => {
                line.style.opacity = '0.5';
                line.style.width = '200px';
            });

            // Create circuit dot
            const dot = document.createElement('div');
            dot.className = 'circuit-dot';
            dot.style.left = `${x}px`;
            dot.style.top = `${y}px`;
            container.appendChild(dot);

            requestAnimationFrame(() => {
                dot.style.opacity = '1';
            });

            // Cleanup
            setTimeout(() => {
                line.style.opacity = '0';
                dot.style.opacity = '0';
                setTimeout(() => {
                    line.remove();
                    dot.remove();
                }, 500);
            }, 1000);
        }
    });

    // Clean old elements periodically
    setInterval(() => {
        const elements = container.children;
        if (elements.length > 50) {
            container.innerHTML = '';
        }
    }, 5000);
}

// Initialize i18n
setupI18n().then(() => {
    // Setup components
    setupNavbar();
    setupFooter();
    
    // Initialize router
    initRouter();

    // Initialize circuit animation
    initCircuitAnimation();

    // Listen for language changes
    document.addEventListener('languageChanged', (event) => {
        const currentPath = window.location.pathname;
        // Force re-render of current page
        window.history.pushState({}, '', currentPath);
        const popStateEvent = new PopStateEvent('popstate');
        window.dispatchEvent(popStateEvent);
    });
});

===== C:\Users\SebaHero\Desktop\CSLuduena\src\pages\About\components\Timeline.js =====

import { t } from '../../../i18n/config.js';

export function createTimeline() {
    const timeline = document.createElement('div');
    timeline.className = 'relative';

    // Timeline line
    const line = document.createElement('div');
    line.className = 'absolute left-1/2 transform -translate-x-px h-full w-0.5 bg-primary-500';
    timeline.appendChild(line);

    const experiences = [
        {
            id: 'indie',
            date: t('about.experience.indie.period'),
            title: t('about.experience.indie.title'),
            company: t('about.experience.indie.company'),
            description: t('about.experience.indie.description')
        },
        {
            id: 'freelance',
            date: t('about.experience.freelance.period'),
            title: t('about.experience.freelance.title'),
            company: t('about.experience.freelance.company'),
            description: t('about.experience.freelance.description')
        },
        {
            id: 'st-computacion',
            date: t('about.experience.st-computacion.period'),
            title: t('about.experience.st-computacion.title'),
            company: t('about.experience.st-computacion.company'),
            description: t('about.experience.st-computacion.description')
        },
        {
            id: 'ep-soluciones',
            date: t('about.experience.ep-soluciones.period'),
            title: t('about.experience.ep-soluciones.title'),
            company: t('about.experience.ep-soluciones.company'),
            description: t('about.experience.ep-soluciones.description')
        }
    ];

    experiences.forEach((experience, index) => {
        const item = createTimelineItem(experience, index);
        timeline.appendChild(item);
    });

    return timeline;
}

function createTimelineItem(experience, index) {
    const item = document.createElement('div');
    item.className = `relative flex items-center mb-12 ${index % 2 === 0 ? 'justify-start' : 'justify-end'}`;
    item.style.opacity = '0';
    item.style.transform = 'translateY(20px)';

    item.innerHTML = `
        <div class="w-5/12 ${index % 2 === 0 ? 'text-right pr-8' : 'text-left pl-8'}">
            <div class="bg-dark-300 p-6 rounded-lg shadow-lg">
                <span class="text-primary-400 font-semibold">
                    ${experience.date}
                </span>
                <h3 class="text-xl font-bold text-white mt-2">
                    ${experience.title}
                </h3>
                <h4 class="text-gray-400 font-medium">
                    ${experience.company}
                </h4>
                <p class="text-gray-300 mt-2">
                    ${experience.description}
                </p>
            </div>
        </div>
        <div class="absolute left-1/2 transform -translate-x-1/2 w-4 h-4 rounded-full bg-primary-500"></div>
    `;

    // Animation using Intersection Observer
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                item.style.transition = 'all 0.8s ease-out';
                item.style.opacity = '1';
                item.style.transform = 'translateY(0)';
                observer.unobserve(entry.target);
            }
        });
    }, { threshold: 0.1 });

    observer.observe(item);

    return item;
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\pages\About\index.js =====

import { t } from '../../i18n/config.js';
import { createTimeline } from './components/Timeline.js';

export function renderAbout(container) {
    const main = document.createElement('main');
    main.className = 'pt-24 pb-16';

    const wrapper = document.createElement('div');
    wrapper.className = 'max-w-7xl mx-auto px-4 sm:px-6 lg:px-8';

    // Profile Section
    const profileSection = document.createElement('div');
    profileSection.className = 'text-center mb-16 opacity-0 transform translate-y-4';
    profileSection.innerHTML = `
        <div class="mb-8">
            <img
                src="/src/assets/profile.jpg"
                alt="Carlos Sebastian Ludueña"
                class="rounded-full mx-auto object-cover border-4 border-primary-500"
                style="width: 19rem; height: 19rem"
            />
        </div>
        <h1 class="text-4xl font-bold text-white mb-4">
            ${t('about.intro')}
        </h1>
    `;

    // Animate profile section
    setTimeout(() => {
        profileSection.style.transition = 'all 0.8s ease-out';
        profileSection.style.opacity = '1';
        profileSection.style.transform = 'translateY(0)';
    }, 100);

    wrapper.appendChild(profileSection);
    wrapper.appendChild(createTimeline());
    main.appendChild(wrapper);
    container.appendChild(main);
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\pages\Contact\components\ContactForm.js =====

import { t } from '../../../i18n/config.js';

export function createContactForm() {
    const form = document.createElement('form');
    form.className = 'relative bg-dark-300 rounded-lg p-8 shadow-lg max-w-lg mx-auto opacity-0 transform translate-y-4';

    form.innerHTML = `
        <div class="mb-6">
            <label for="name" class="block text-gray-300 text-sm font-medium mb-2">
                ${t('contact.form.name')}
            </label>
            <input
                type="text"
                id="name"
                name="name"
                required
                class="w-full bg-dark-400 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:border-primary-500"
            />
        </div>

        <div class="mb-6">
            <label for="email" class="block text-gray-300 text-sm font-medium mb-2">
                ${t('contact.form.email')}
            </label>
            <input
                type="email"
                id="email"
                name="email"
                required
                class="w-full bg-dark-400 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:border-primary-500"
            />
        </div>

        <div class="mb-6">
            <label for="message" class="block text-gray-300 text-sm font-medium mb-2">
                ${t('contact.form.message')}
            </label>
            <textarea
                id="message"
                name="message"
                required
                rows="4"
                class="w-full bg-dark-400 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:border-primary-500"
            ></textarea>
        </div>

        <button
            type="submit"
            class="w-full bg-primary-500 text-white font-medium py-2 px-4 rounded-lg hover:bg-primary-600 transition-colors"
        >
            ${t('contact.form.send')}
        </button>
    `;

    // Form submission handler
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());
        console.log('Form submitted:', data);
        // Here you would typically send the data to your backend
    });

    // Animation
    setTimeout(() => {
        form.style.transition = 'all 0.8s ease-out';
        form.style.opacity = '1';
        form.style.transform = 'translateY(0)';
    }, 200);

    return form;
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\pages\Contact\index.js =====

import { t } from '../../i18n/config.js';
import { createContactForm } from './components/ContactForm.js';

export function renderContact(container) {
    const main = document.createElement('main');
    main.className = 'pt-24 pb-16';

    const wrapper = document.createElement('div');
    wrapper.className = 'max-w-3xl mx-auto px-4 sm:px-6 lg:px-8';

    const header = document.createElement('div');
    header.className = 'text-center mb-12 opacity-0 transform translate-y-4';
    header.innerHTML = `
        <h1 class="text-4xl font-bold text-white mb-4">
            ${t('contact.title')}
        </h1>
        <p class="text-xl text-gray-300">
            ${t('contact.subtitle')}
        </p>
    `;

    // Animate header
    setTimeout(() => {
        header.style.transition = 'all 0.8s ease-out';
        header.style.opacity = '1';
        header.style.transform = 'translateY(0)';
    }, 100);

    wrapper.appendChild(header);
    wrapper.appendChild(createContactForm());
    main.appendChild(wrapper);
    container.appendChild(main);
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\pages\Home\components\Hero.js =====

import { t } from '../../../i18n/config.js';

export function createHero() {
    const section = document.createElement('section');
    section.className = 'min-h-[calc(100vh-4rem)] flex items-center justify-center bg-dark-100';
    
    section.innerHTML = `
        <div class="text-center opacity-0 transform translate-y-4" data-animate>
            <h1 class="text-5xl md:text-7xl font-bold mb-4 bg-gradient-to-r from-primary-400 to-primary-600 text-transparent bg-clip-text">
                CSLuduena
            </h1>
            <h2 class="text-2xl md:text-3xl text-gray-300 mb-4">
                ${t('hero.role')}
            </h2>
            <p class="text-lg md:text-xl text-gray-400">
                ${t('hero.technologies')}
            </p>
        </div>
    `;

    // Animation
    setTimeout(() => {
        const animateEl = section.querySelector('[data-animate]');
        animateEl.style.transition = 'all 0.8s ease-out';
        animateEl.style.opacity = '1';
        animateEl.style.transform = 'translateY(0)';
    }, 100);

    return section;
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\pages\Home\components\SkillCard.js =====

export function createSkillCard(title, description, children = []) {
    const card = document.createElement('div');
    card.className = 'bg-dark-300/80 backdrop-blur-sm rounded-lg p-6 shadow-lg opacity-0 transform translate-y-4 hover:shadow-primary-500/20 transition-all duration-300';
    
    card.innerHTML = `
        <h3 class="text-2xl font-bold text-primary-400 mb-4">${title}</h3>
        ${description ? `<p class="text-gray-300 mb-6">${description}</p>` : ''}
        <div class="flex flex-wrap gap-2"></div>
    `;

    if (children.length > 0) {
        const container = card.querySelector('.flex');
        children.forEach(child => container.appendChild(child));
    }

    // Animation
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                card.style.transition = 'all 0.8s ease-out';
                card.style.opacity = '1';
                card.style.transform = 'translateY(0)';
                observer.unobserve(entry.target);
            }
        });
    }, { threshold: 0.1 });

    observer.observe(card);

    return card;
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\pages\Home\components\Skills.js =====

import { t } from '../../../i18n/config.js';
import { createSkillCard } from './SkillCard.js';
import { createTechBadge } from './TechBadge.js';

export function createSkills() {
    const section = document.createElement('section');
    section.className = 'py-20 bg-dark-200 relative overflow-hidden';

    // Video background with overlay
    section.innerHTML = `
        <div class="absolute inset-0 overflow-hidden">
            <video autoplay loop muted playsinline class="absolute right-0 top-0 w-full h-full object-cover opacity-5">
                <source src="/src/assets/coding.mp4" type="video/mp4">
            </video>
            <div class="absolute inset-0 bg-gradient-to-b from-dark-200/80 to-dark-200/95"></div>
        </div>
    `;

    const container = document.createElement('div');
    container.className = 'max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10';

    const content = document.createElement('div');
    content.className = 'space-y-16';

    // Technical Skills
    const technicalSkills = document.createElement('div');
    technicalSkills.className = 'grid grid-cols-1 md:grid-cols-2 gap-8';

    // Get technologies arrays from translations
    const frontendTechnologies = t('skills.frontend.technologies', { returnObjects: true }) || [];
    const backendTechnologies = t('skills.backend.technologies', { returnObjects: true }) || [];

    // Frontend Card
    const frontendCard = createSkillCard(
        t('skills.frontend.title'),
        t('skills.frontend.description'),
        Array.isArray(frontendTechnologies) ? frontendTechnologies.map(createTechBadge) : []
    );

    // Backend Card
    const backendCard = createSkillCard(
        t('skills.backend.title'),
        t('skills.backend.description'),
        Array.isArray(backendTechnologies) ? backendTechnologies.map(createTechBadge) : []
    );

    technicalSkills.appendChild(frontendCard);
    technicalSkills.appendChild(backendCard);

    // Professional Skills
    const professionalSkills = document.createElement('div');
    professionalSkills.className = 'grid grid-cols-1 md:grid-cols-3 gap-8';

    const adaptableCard = createSkillCard(t('skills.adaptable.title'), t('skills.adaptable.description'));
    const supportiveCard = createSkillCard(t('skills.supportive.title'), t('skills.supportive.description'));
    const experienceCard = createSkillCard(t('skills.experience.title'), t('skills.experience.description'));

    professionalSkills.appendChild(adaptableCard);
    professionalSkills.appendChild(supportiveCard);
    professionalSkills.appendChild(experienceCard);

    content.appendChild(technicalSkills);
    content.appendChild(professionalSkills);
    container.appendChild(content);
    section.appendChild(container);

    return section;
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\pages\Home\components\TechBadge.js =====

export function createTechBadge(name) {
    const badge = document.createElement('span');
    badge.className = 'inline-block bg-dark-400 text-primary-300 px-3 py-1 rounded-full text-sm font-medium transform transition-transform hover:scale-105';
    badge.textContent = name;
    return badge;
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\pages\Home\index.js =====

import { t } from '../../i18n/config.js';
import { createHero } from './components/Hero.js';
import { createSkills } from './components/Skills.js';

export function renderHome(container) {
    const main = document.createElement('main');
    main.className = 'pt-16';
    
    main.appendChild(createHero());
    main.appendChild(createSkills());
    
    container.appendChild(main);
}



===== C:\Users\SebaHero\Desktop\CSLuduena\src\pages\Portfolio\components\ProjectCard.js =====

export function createProjectCard(project) {
    const card = document.createElement('div');
    card.className = 'bg-dark-300 rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-300 opacity-0 transform translate-y-4';
    
    const defaultImage = './projects/javascript.png';
    
    card.innerHTML = `
        <div class="relative aspect-video group">
            <img
                src="${project.image || defaultImage}"
                alt="${project.title}"
                class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                onerror="this.src='${defaultImage}'"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                <div class="absolute bottom-0 left-0 right-0 p-4">
                    <p class="text-white text-sm">Click to view project</p>
                </div>
            </div>
        </div>

        <div class="p-6">
            <h3 class="text-xl font-bold text-white mb-2">${project.title}</h3>
            <p class="text-gray-300 mb-4">${project.description}</p>

            <div class="flex flex-wrap gap-2 mb-4">
                ${project.technologies.map(tech => `
                    <span class="text-sm text-primary-300 bg-dark-400 px-2 py-1 rounded">
                        ${tech}
                    </span>
                `).join('')}
            </div>

            ${project.platforms ? `
                <div class="flex flex-wrap gap-2 mb-4">
                    ${project.platforms.map(platform => `
                        <span class="text-sm text-gray-300 bg-dark-400 px-2 py-1 rounded">
                            ${platform}
                        </span>
                    `).join('')}
                </div>
            ` : ''}

            <div class="flex gap-4 mt-4">
                ${project.githubUrl ? `
                    <a href="${project.githubUrl}" target="_blank" rel="noopener noreferrer" 
                       class="text-gray-300 hover:text-primary-400 transition-colors">
                        <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z"/>
                        </svg>
                    </a>
                ` : ''}
                <a href="${project.liveUrl}" target="_blank" rel="noopener noreferrer" 
                   class="text-gray-300 hover:text-primary-400 transition-colors">
                    <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                              d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                    </svg>
                </a>
            </div>
        </div>
    `;

    // Make the entire card clickable to visit the live URL
    card.style.cursor = 'pointer';
    card.addEventListener('click', (e) => {
        // Don't trigger if clicking on a link
        if (e.target.closest('a')) return;
        window.open(project.liveUrl, '_blank');
    });

    // Animation
    setTimeout(() => {
        card.style.transition = 'all 0.8s ease-out';
        card.style.opacity = '1';
        card.style.transform = 'translateY(0)';
    }, 100);

    return card;
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\pages\Portfolio\index.js =====

import { t } from '../../i18n/config.js';
import { createProjectCard } from './components/ProjectCard.js';

const projects = [
    {
        id: 'codercamp',
        title: 'CoderCamp',
        description: t('portfolio.projects.codercamp.description'),
        image: '/projects/codercamp.png',
        technologies: ['JavaScript', 'HTML', 'CSS'],
        liveUrl: 'https://csluduena.github.io/codercamp/',
        githubUrl: 'https://github.com/csluduena/codercamp'
    },
    {
        id: 'viajesbsas',
        title: 'ViajesBsAs',
        description: t('portfolio.projects.viajesbsas.description'),
        image: '/projects/viajesbsas.png',
        technologies: ['JavaScript', 'TypeScript', 'HTML', 'CSS'],
        liveUrl: 'https://csluduena.github.io/ViajesBsAs-Web-Pages/',
        githubUrl: 'https://github.com/csluduena/ViajesBsAs-Web-Pages'
    },
    {
        id: 'guitarstore',
        title: 'Guitar Store',
        description: t('portfolio.projects.guitarstore.description'),
        image: '/projects/guitarstore.png',
        technologies: ['JavaScript', 'CSS'],
        liveUrl: 'https://guitarstore-react.netlify.app/',
        githubUrl: 'https://github.com/csluduena/guitar-store'
    },
    {
        id: 'javascript-project',
        title: 'JavaScript Project',
        description: t('portfolio.projects.javascript.description'),
        image: '/projects/javascript.png',
        technologies: ['JavaScript', 'HTML', 'CSS'],
        liveUrl: 'https://csluduena.github.io/CoderHouse-DesarrolloFullStack-Javascript-Trabajo3/',
        githubUrl: 'https://github.com/csluduena/CoderHouse-DesarrolloFullStack-Javascript-Trabajo3'
    }
];

const hbmProject = {
    id: 'hbm',
    title: 'HB Models',
    description: t('portfolio.projects.hbm.description'),
    image: '/projects/hbmodels.png',
    technologies: ['JavaScript', 'PHP', 'MariaDB', 'phpMyAdmin', 'HTML', 'CSS'],
    platforms: t('portfolio.projects.hbm.platforms', { returnObjects: true }),
    liveUrl: 'https://hbmodels.com.ar/'
};

export function renderPortfolio(container) {
    container.innerHTML = '';

    const main = document.createElement('main');
    main.className = 'pt-24 pb-16 min-h-screen bg-dark-100 relative';

    // Add video background
    const videoBackground = document.createElement('div');
    videoBackground.className = 'absolute inset-0 overflow-hidden';
    videoBackground.innerHTML = `
        <video autoplay loop muted playsinline class="w-full h-full object-cover opacity-5">
            <source src="/src/assets/coding.mp4" type="video/mp4">
        </video>
    `;
    main.appendChild(videoBackground);

    const wrapper = document.createElement('div');
    wrapper.className = 'max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10';

    // Featured Client Section
    const featuredSection = document.createElement('div');
    featuredSection.className = 'mb-20';
    featuredSection.innerHTML = `
        <h2 class="text-center text-4xl font-bold text-white mb-4">
            ${t('portfolio.title2')}
        </h2>
        <p class="text-center text-gray-400 mb-12">
            ${t('portfolio.subtitle2')}
        </p>
    `;

    const featuredCard = document.createElement('div');
    featuredCard.className = 'max-w-5xl mx-auto';
    featuredCard.appendChild(createProjectCard(hbmProject));
    featuredSection.appendChild(featuredCard);

    // Projects Section
    const projectsSection = document.createElement('div');
    projectsSection.className = 'mt-20';
    projectsSection.innerHTML = `
        <h2 class="text-center text-4xl font-bold text-white mb-4">
            ${t('portfolio.title')}
        </h2>
        <p class="text-center text-gray-400 mb-12">
            ${t('portfolio.subtitle')}
        </p>
    `;

    const projectsGrid = document.createElement('div');
    projectsGrid.className = 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-8';
    projects.forEach(project => {
        projectsGrid.appendChild(createProjectCard(project));
    });
    projectsSection.appendChild(projectsGrid);

    wrapper.appendChild(featuredSection);
    wrapper.appendChild(projectsSection);
    main.appendChild(wrapper);
    container.appendChild(main);

    // Re-render when language changes
    document.addEventListener('languageChanged', () => {
        renderPortfolio(container);
    });
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\router.js =====

import { renderHome } from './pages/Home/index.js';
import { renderAbout } from './pages/About/index.js';
import { renderPortfolio } from './pages/Portfolio/index.js';
import { renderContact } from './pages/Contact/index.js';

const routes = {
    '/': renderHome,
    '/about': renderAbout,
    '/portfolio': renderPortfolio,
    '/contact': renderContact
};

export function initRouter() {
    function handleRoute() {
        const path = window.location.pathname || '/';
        const renderer = routes[path] || routes['/'];
        const mainContent = document.getElementById('main-content');
        mainContent.innerHTML = '';
        renderer(mainContent);

        // Update active nav link
        document.querySelectorAll('[data-link]').forEach(link => {
            if (link.getAttribute('href') === path) {
                link.classList.add('text-primary-400');
            } else {
                link.classList.remove('text-primary-400');
            }
        });
    }

    // Handle navigation
    window.addEventListener('popstate', handleRoute);
    document.addEventListener('click', (e) => {
        if (e.target.matches('[data-link]')) {
            e.preventDefault();
            const href = e.target.getAttribute('href');
            window.history.pushState({}, '', href);
            handleRoute();
        }
    });

    // Initial route
    handleRoute();
}

===== C:\Users\SebaHero\Desktop\CSLuduena\src\utils\animations.js =====

export function fadeInUp(element, delay = 0) {
    element.style.opacity = '0';
    element.style.transform = 'translateY(20px)';
    
    setTimeout(() => {
        element.style.transition = 'all 0.8s ease-out';
        element.style.opacity = '1';
        element.style.transform = 'translateY(0)';
    }, delay);
}

export function createIntersectionObserver(element, callback) {
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                callback(entry.target);
                observer.unobserve(entry.target);
            }
        });
    }, { threshold: 0.1 });

    observer.observe(element);
    return observer;
}

===== C:\Users\SebaHero\Desktop\CSLuduena\tailwind.config.js =====

/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,html}",
  ],
  darkMode: 'class',
  theme: {
    extend: {
      colors: {
        primary: {
          50: '#f0f9ff',
          100: '#e0f2fe',
          200: '#bae6fd',
          300: '#7dd3fc',
          400: '#38bdf8',
          500: '#0ea5e9',
          600: '#0284c7',
          700: '#0369a1',
          800: '#075985',
          900: '#0c4a6e',
        },
        dark: {
          100: '#1E1E1E',
          200: '#2D2D2D',
          300: '#3D3D3D',
          400: '#4D4D4D',
        }
      },
      fontFamily: {
        sans: ['Inter', 'system-ui', '-apple-system', 'sans-serif'],
      },
    },
  },
  plugins: [],
}

===== C:\Users\SebaHero\Desktop\CSLuduena\vite.config.js =====

// vite.config.js
import { defineConfig } from 'vite';

export default defineConfig({
    server: {
        open: true,   // Esto abre el navegador automáticamente al iniciar el servidor de desarrollo
        port: 3000,   // Cambia el puerto si lo necesitas
    },
});